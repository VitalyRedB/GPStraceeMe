package com.githubvitalyredb.gpstraceeme

import android.content.Context
import android.content.Intent
import android.content.SharedPreferences
import android.media.MediaPlayer
import android.os.Bundle
import android.view.animation.AnimationUtils
import android.widget.*
import androidx.appcompat.app.AppCompatActivity

/**
 * –≠–∫—Ä–∞–Ω –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ç—Ä–µ–∫–µ—Ä–∞.
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–¥–∞—Ç—å:
 *  ‚Äì –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–∫–∏–Ω–≥–∞
 *  ‚Äì –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 *  ‚Äì —Ç–æ–∫–µ–Ω, ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å
 *  ‚Äì –≤–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
 */
class SettingsActivity : AppCompatActivity() {

    // üîß –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    private lateinit var editStartHour: EditText
    private lateinit var editEndHour: EditText
    private lateinit var editInterval: EditText
    private lateinit var editToken: EditText
    private lateinit var editUserId: EditText
    private lateinit var editPassword: EditText
    private lateinit var buttonSaveExit: Button
    private lateinit var switchBackgroundMessages: Switch
    private lateinit var prefs: SharedPreferences

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_settings)

        // üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        prefs = getSharedPreferences("AppPrefs", Context.MODE_PRIVATE)

        // üß© –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∫ XML
        editStartHour = findViewById(R.id.edit_start_hour)
        editEndHour = findViewById(R.id.edit_end_hour)
        editInterval = findViewById(R.id.edit_interval)
        editToken = findViewById(R.id.edit_token)
        editUserId = findViewById(R.id.edit_user_id)
        editPassword = findViewById(R.id.edit_password)
        buttonSaveExit = findViewById(R.id.button_start_tracker)
        switchBackgroundMessages = findViewById(R.id.switch_background_messages)

        // üí´ –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
        val developerImageView = findViewById<ImageView>(R.id.developerImageView)
        val anim = AnimationUtils.loadAnimation(this, R.anim.rotate_and_scale_animation)
        developerImageView.startAnimation(anim)

        // ‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–æ–ª—è
        loadData()

        // üåô –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ñ–æ–Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        val bgEnabled = prefs.getBoolean("background_messages_enabled", true)
        switchBackgroundMessages.isChecked = bgEnabled

        // üéöÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        switchBackgroundMessages.setOnCheckedChangeListener { _, isChecked ->
            prefs.edit().putBoolean("background_messages_enabled", isChecked).apply()

            // –¶–≤–µ—Ç –ø–æ–ª–∑—É–Ω–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
            if (isChecked) {
                // üí° –í–∫–ª—é—á–µ–Ω–æ: –ø–æ–ª–∑—É–Ω–æ–∫ —Å–ø—Ä–∞–≤–∞, –∑–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç (#A4C639)
                switchBackgroundMessages.thumbDrawable.setTint(android.graphics.Color.parseColor("#A4C639"))
            } else {
                // üåë –í—ã–∫–ª—é—á–µ–Ω–æ: –ø–æ–ª–∑—É–Ω–æ–∫ —Å–ª–µ–≤–∞, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–µ—Ä—ã–π
                switchBackgroundMessages.thumbDrawable.setTint(
                    getColor(android.R.color.darker_gray)
                )
            }

            // –ö–æ—Ä–æ—Ç–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            Toast.makeText(
                this,
                if (isChecked) "–§–æ–Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã" else "–§–æ–Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω—ã",
                Toast.LENGTH_SHORT
            ).show()
        }

        // üìÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏"
        buttonSaveExit.setOnClickListener {
            playShortSound(R.raw.click_sound)
            saveData()
        }
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ SharedPreferences –≤ –ø–æ–ª—è –≤–≤–æ–¥–∞.
     */
    private fun loadData() {
        editStartHour.setText(prefs.getString("START_HOUR", "08:00"))
        editEndHour.setText(prefs.getString("END_HOUR", "20:00"))
        editInterval.setText(prefs.getString("INTERVAL", "00:10"))
        editToken.setText(prefs.getString("TOKEN", "SECRET123"))
        editUserId.setText(prefs.getString("USER_ID", "YOUR_TRACKER_ID_123"))
        editPassword.setText(prefs.getString("PASSWORD", "12345"))
    }

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ SharedPreferences –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ MainActivity.
     */
    private fun saveData() {
        val newStart = editStartHour.text.toString().trim()
        val newEnd = editEndHour.text.toString().trim()
        val newInterval = editInterval.text.toString().trim()
        val newToken = editToken.text.toString().trim()
        val newUserId = editUserId.text.toString().trim()
        val newPassword = editPassword.text.toString().trim()

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è (5 —Ü–∏—Ñ—Ä)
        if (newPassword.length != 5 || !newPassword.all { it.isDigit() }) {
            Toast.makeText(this, "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 5 —Ü–∏—Ñ—Ä", Toast.LENGTH_SHORT).show()
            return
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        prefs.edit()
            .putString("START_HOUR", newStart)
            .putString("END_HOUR", newEnd)
            .putString("INTERVAL", newInterval)
            .putString("TOKEN", newToken)
            .putString("USER_ID", newUserId)
            .putString("PASSWORD", newPassword)
            .apply()

        Toast.makeText(this, "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã", Toast.LENGTH_SHORT).show()

        // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        val intent = Intent(this, MainActivity::class.java)
        intent.flags = Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_NEW_TASK
        startActivity(intent)
        finish()
    }

    /**
     * –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –∑–≤—É–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏.
     */
    private fun playShortSound(resId: Int) {
        val sound = MediaPlayer.create(this, resId)
        sound.setOnCompletionListener { it.release() }
        sound.start()
    }

    /**
     * –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤—ã–º –∑–≤—É–∫–æ–º –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–∏ –Ω–∞ —ç–∫—Ä–∞–Ω.
     */
    override fun onResume() {
        super.onResume()
        MusicPlayer.start(this)
    }

    /**
     * –ü—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏ ‚Äî —Å—Ç–∞–≤–∏–º –º—É–∑—ã–∫—É –Ω–∞ –ø–∞—É–∑—É.
     */
    override fun onPause() {
        super.onPause()
        MusicPlayer.pause()
    }

    override fun onDestroy() {
        super.onDestroy()
    }
}




